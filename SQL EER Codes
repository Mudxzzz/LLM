-- Create Customer table
CREATE TABLE Customer (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100),
    Address VARCHAR(255),
    Phone VARCHAR(15),
    Email VARCHAR(100)
);

-- Insert dummy data into Customer table
INSERT INTO Customer (CustomerID, Name, Address, Phone, Email) VALUES
(1, 'John Doe', '123 Maple St', '555-1234', 'johndoe@example.com'),
(2, 'Jane Smith', '456 Oak St', '555-5678', 'janesmith@example.com');

-- Create Branch table
CREATE TABLE Branch (
    BranchID INT PRIMARY KEY,
    BranchName VARCHAR(100),
    Address VARCHAR(255),
    Phone VARCHAR(15)
);

-- Insert dummy data into Branch table
INSERT INTO Branch (BranchID, BranchName, Address, Phone) VALUES
(1, 'Downtown', '789 Pine St', '555-8765'),
(2, 'Uptown', '101 Elm St', '555-4321');

-- Create Account table
CREATE TABLE Account (
    AccountID INT PRIMARY KEY,
    AccountType VARCHAR(50),
    Balance DECIMAL(10, 2),
    OpenDate DATE,
    CloseDate DATE,
    CustomerID INT,
    BranchID INT,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (BranchID) REFERENCES Branch(BranchID)
);

-- Insert dummy data into Account table
INSERT INTO Account (AccountID, AccountType, Balance, OpenDate, CloseDate, CustomerID, BranchID) VALUES
(1, 'Checking', 1000.00, '2024-01-01', NULL, 1, 1),
(2, 'Savings', 2500.00, '2024-02-01', NULL, 2, 2);

-- Create Transaction table
CREATE TABLE Transaction (
    TransactionID INT PRIMARY KEY,
    Date DATE,
    Amount DECIMAL(10, 2),
    TransactionType VARCHAR(50),
    Description VARCHAR(255),
    AccountID INT,
    FOREIGN KEY (AccountID) REFERENCES Account(AccountID)
);

-- Insert dummy data into Transaction table
INSERT INTO Transaction (TransactionID, Date, Amount, TransactionType, Description, AccountID) VALUES
(1, '2024-03-01', 500.00, 'Deposit', 'Salary', 1),
(2, '2024-03-15', 200.00, 'Withdrawal', 'Groceries', 1),
(3, '2024-04-01', 1500.00, 'Deposit', 'Bonus', 2),
(4, '2024-04-20', 300.00, 'Withdrawal', 'Utilities', 2);

-- Create Employee table
CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(100),
    Position VARCHAR(50),
    Salary DECIMAL(10, 2),
    HireDate DATE,
    BranchID INT,
    FOREIGN KEY (BranchID) REFERENCES Branch(BranchID)
);

-- Insert dummy data into Employee table
INSERT INTO Employee (EmployeeID, Name, Position, Salary, HireDate, BranchID) VALUES
(1, 'Alice Johnson', 'Manager', 60000.00, '2022-01-15', 1),
(2, 'Bob Brown', 'Clerk', 35000.00, '2023-06-01', 2);

-- Create Loan table
CREATE TABLE Loan (
    LoanID INT PRIMARY KEY,
    LoanType VARCHAR(50),
    Amount DECIMAL(10, 2),
    InterestRate DECIMAL(4, 2),
    StartDate DATE,
    EndDate DATE,
    CustomerID INT,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

-- Insert dummy data into Loan table
INSERT INTO Loan (LoanID, LoanType, Amount, InterestRate, StartDate, EndDate, CustomerID) VALUES
(1, 'Home Loan', 150000.00, 3.75, '2024-01-01', '2044-01-01', 1),
(2, 'Car Loan', 25000.00, 4.25, '2024-05-01', '2029-05-01', 2);

-- Create Payment table
CREATE TABLE Payment (
    PaymentID INT PRIMARY KEY,
    PaymentDate DATE,
    Amount DECIMAL(10, 2),
    LoanID INT,
    FOREIGN KEY (LoanID) REFERENCES Loan(LoanID)
);

-- Insert dummy data into Payment table
INSERT INTO Payment (PaymentID, PaymentDate, Amount, LoanID) VALUES
(1, '2024-02-01', 1000.00, 1),
(2, '2024-03-01', 1000.00, 1),
(3, '2024-06-01', 500.00, 2),
(4, '2024-07-01', 500.00, 2);


Explanation of the Code
Customer Table: Contains customer information with CustomerID as the primary key.
Branch Table: Contains branch information with BranchID as the primary key.
Account Table: Contains account information linked to customers and branches. AccountID is the primary key, and CustomerID and BranchID are foreign keys.
Transaction Table: Contains transaction information linked to accounts. TransactionID is the primary key, and AccountID is a foreign key.
Employee Table: Contains employee information linked to branches. EmployeeID is the primary key, and BranchID is a foreign key.
Loan Table: Contains loan information linked to customers. LoanID is the primary key, and CustomerID is a foreign key.
Payment Table: Contains payment information linked to loans. PaymentID is the primary key, and LoanID is a foreign key.
This code creates the necessary tables, establishes relationships through primary and foreign keys, and populates the tables with some dummy data.
